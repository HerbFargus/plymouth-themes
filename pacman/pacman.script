# This is an example plymouth plugin script

## Load the image of a background
#background_image = Image("default.png");
#
## Create a sprite of the background
#background_sprite = Sprite(background_image);
#
## Add your code here
#
#background_image = Image("default.png");
#
#screen_ratio = Window.GetHeight() / Window.GetWidth();
#background_image_ratio = background_image.GetHeight() / background_image.GetWidth();
#
#if (screen_ratio > background_image_ratio)
#  {  # Screen ratio is taller than image ratio, we will match the screen height
#     scale_factor =  Window.GetHeight() / background_image.GetHeight();
#  }
#else
#  {  # Screen ratio is wider than image ratio, we will match the screen width
#     scale_factor =  Window.GetWidth() / background_image.GetWidth();
#  }
#
#scaled_background_image = background_image.Scale(background_image.GetWidth()  * scale_factor,
#                                         background_image.GetHeight() * scale_factor);
#background_sprite = Sprite(scaled_background_image); # Create the a sprite using the scaled image
#
#background_sprite.SetX(Window.GetWidth()  / 2 - scaled_background_image.GetWidth () / 2); # Place in the centre
#background_sprite.SetY(Window.GetHeight() / 2 - scaled_background_image.GetHeight() / 2);
#background_sprite.SetZ(-10000); # Place right at the back

# Background

Window.SetBackgroundTopColor (0, 0, 0);
Window.SetBackgroundBottomColor (0, 0, 0);

#----------------------------------------- Maze Sprite --------------------------------

screen_width = Window.GetWidth();
screen_height = Window.GetHeight();

maze_image = Image("maze.png");
resized_maze_image = maze_image.Scale(screen_width, 1);
resized_maze_image2 = maze_image.Scale(screen_width, 1);
maze_sprite_top = Sprite (resized_maze_image);
maze_sprite_bottom = Sprite (resized_maze_image2);

maze_sprite_top.SetX (Window.GetWidth () / 2 - maze_sprite_top.GetImage().GetWidth() / 2);
maze_sprite_top.SetY (Window.GetHeight() / 1.58 - maze_sprite_top.GetImage().GetHeight() / 1.58);
maze_sprite_top.SetZ (10000);

maze_sprite_bottom.SetX (Window.GetWidth () / 2 - maze_sprite_bottom.GetImage().GetWidth() / 2);
maze_sprite_bottom.SetY (Window.GetHeight() / 1.45 - maze_sprite_bottom.GetImage().GetHeight() / 1.45);
maze_sprite_bottom.SetZ (10000);

#----------------------------------------- Dot Sprites --------------------------------

# small_dot_image = Image("small_dot.png");
# resized_small_dot_image = small_dot_image.Scale(4, 4);
# small_dot_sprite = Sprite (resized_small_dot_image);
# 
# small_dot_sprite.SetX (Window.GetWidth () / 2 - small_dot_sprite.GetImage().GetWidth() / 2);
# small_dot_sprite.SetY (Window.GetHeight() / 1.51 - small_dot_sprite.GetImage().GetHeight() / 1.5);
# maze_sprite_top.SetZ (5000);

#----------------------------------------- Pacman Animation --------------------------------

    for (i = 0; i < 3; i++)
      pacman_images[i] = Image("pacman" + i + ".png");
    pacman_sprite = Sprite();
    
    progress = 0;
fun refresh_callback ()
  {
progress++;

pacman_sprite.SetX (Window.GetWidth () / 2 - pacman_sprite.GetImage().GetWidth() / 2);
pacman_sprite.SetY (Window.GetHeight() / 1.5 - pacman_sprite.GetImage().GetHeight() / 1.5);
pacman_sprite.SetZ (10000);

pacman_sprite.SetImage(pacman_images[Math.Int(progress / 6) % 3]);
pacman_sprite.SetX(progress * 4);
  }
  
Plymouth.SetRefreshFunction (refresh_callback);

#----------------------------------------- Dot Animation --------------------------------

#small_dot_sprite = Sprite ();
#small_dot_sprite.SetImage (small_dot.png);
#
#    progress = 0;
#
#fun refresh_callback ()
#  {
#progress++;
#
#small_dot_sprite.SetX (Window.GetWidth () / 2 - small_dot_sprite.GetImage().GetWidth() / 2);
#small_dot_sprite.SetY (Window.GetHeight() / 1.5 - small_dot_sprite.GetImage().GetHeight() / 1.5);
#small_dot_sprite.SetZ (10000);
#
#small_dot_sprite.SetImage(small_dot_images[Math.Int(progress / 6) % 3]);
#small_dot_sprite.SetX(progress * 4);
#  }
#  
#Plymouth.SetRefreshFunction (refresh_callback);

#----------------------------------------- Dialogue --------------------------------

status = "normal";

fun dialog_setup()
  {
    local.box;
    local.lock;
    local.entry;
    
    box.image = Image("box.png");
    lock.image = Image("lock.png");
    entry.image = Image("entry.png");
    
    box.sprite = Sprite(box.image);
    box.x = Window.GetWidth()  / 2 - box.image.GetWidth ()/2;
    box.y = Window.GetHeight() / 2 - box.image.GetHeight()/2;
    box.z = 10000;
    box.sprite.SetPosition(box.x, box.y, box.z);
    
    lock.sprite = Sprite(lock.image);
    lock.x = box.x + box.image.GetWidth()/2 - (lock.image.GetWidth() + entry.image.GetWidth()) / 2;
    lock.y = box.y + box.image.GetHeight()/2 - lock.image.GetHeight()/2;
    lock.z = box.z + 1;
    lock.sprite.SetPosition(lock.x, lock.y, lock.z);
    
    entry.sprite = Sprite(entry.image);
    entry.x = lock.x + lock.image.GetWidth();
    entry.y = box.y + box.image.GetHeight()/2 - entry.image.GetHeight()/2;
    entry.z = box.z + 1;
    entry.sprite.SetPosition(entry.x, entry.y, entry.z);
    
    global.dialog.box = box;
    global.dialog.lock = lock;
    global.dialog.entry = entry;
    global.dialog.bullet_image = Image("bullet.png");
    dialog_opacity (1);
  }
    
fun dialog_opacity(opacity)
  {
    dialog.box.sprite.SetOpacity (opacity);
    dialog.lock.sprite.SetOpacity (opacity);
    dialog.entry.sprite.SetOpacity (opacity);
    for (index = 0; dialog.bullet[index]; index++)
      {
        dialog.bullet[index].sprite.SetOpacity(opacity);
      }
  }

fun display_normal_callback ()
  {
    global.status = "normal";
    if (global.dialog)
      dialog_opacity (0);
  }

fun display_password_callback (prompt, bullets)
  {
    global.status = "password";
    if (!global.dialog)
    dialog_setup();
    else
    dialog_opacity(1);
    for (index = 0; dialog.bullet[index] || index < bullets; index++)
      {
        if (!dialog.bullet[index])
          {
            dialog.bullet[index].sprite = Sprite(dialog.bullet_image);
            dialog.bullet[index].x = dialog.entry.x + index * dialog.bullet_image.GetWidth();
            dialog.bullet[index].y = dialog.entry.y + dialog.entry.image.GetHeight() / 2 - dialog.bullet_image.GetHeight() / 2;
            dialog.bullet[index].z = dialog.entry.z + 1;
            dialog.bullet[index].sprite.SetPosition(dialog.bullet[index].x, dialog.bullet[index].y, dialog.bullet[index].z);
          }
        if (index < bullets)
          dialog.bullet[index].sprite.SetOpacity(1);
        else
          dialog.bullet[index].sprite.SetOpacity(0);
      }
  }

Plymouth.SetDisplayNormalFunction(display_normal_callback);
Plymouth.SetDisplayPasswordFunction(display_password_callback);

#----------------------------------------- Progress Bar --------------------------------

#progress_box.image = Image("progress_box.png");
#progress_box.sprite = Sprite(progress_box.image);
#
#progress_box.x = Window.GetWidth()  / 2 -    progress_box.image.GetWidth()  / 2;
#progress_box.y = Window.GetHeight() * 0.75 - progress_box.image.GetHeight() / 2;
#progress_box.sprite.SetPosition(progress_box.x, progress_box.y, 0);
#
#progress_bar.original_image = Image("progress_bar.png");
#progress_bar.sprite = Sprite();
#
#progress_bar.x = Window.GetWidth()  / 2 -        progress_bar.original_image.GetWidth() / 2;
#progress_bar.y = Window.GetHeight() / 2 * 1.5  - progress_box.image.GetHeight() / 2 + (progress_box.image.GetHeight() - progress_bar.original_image.GetHeight()) / 2;
#progress_bar.sprite.SetPosition(progress_bar.x, progress_bar.y, 1);
#
#fun progress_callback (duration, progress)
#  {
#    if (progress_bar.image.GetWidth () != Math.Int (progress_bar.original_image.GetWidth () * progress))
#      {
#        progress_bar.image = progress_bar.original_image.Scale(progress_bar.original_image.GetWidth(progress_bar.original_image) * progress, progress_bar.original_image.GetHeight());
#        progress_bar.sprite.SetImage (progress_bar.image);
#      }
#  }

Plymouth.SetBootProgressFunction(progress_callback);

#----------------------------------------- Quit --------------------------------

fun quit_callback ()
{
}

Plymouth.SetQuitFunction(quit_callback);

#----------------------------------------- Message --------------------------------

message_sprite = Sprite();
message_sprite.SetPosition(10, 10, 10000);

fun message_callback (text)
{
  my_image = Image.Text(text, 1, 1, 1);
  message_sprite.SetImage(my_image);
}

Plymouth.SetMessageFunction(message_callback);
