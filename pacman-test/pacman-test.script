# This is an example plymouth plugin script

# Load an image
# pacman_image = Image("pacman0.png");

# Create a sprite
# pacman_sprite = Sprite(pacman_image);

#-----------------------Place in Center-----------------------

# pacman_sprite.SetX(Window.GetWidth()  / 2 - pacman_image.GetWidth () / 2); # Place in horizontal centre
# pacman_sprite.SetY(Window.GetHeight() / 2 - pacman_image.GetHeight() / 2); # Place in vertical centre
# pacman_sprite.SetZ(10000); # Place in front

#-----------------------Global Variables-----------------------

screen_width = Window.GetWidth();
screen_height = Window.GetHeight();

#----------------------------------------- Maze Sprite --------------------------------

maze_image = Image("maze.png");
resized_maze_image = maze_image.Scale(screen_width, 1); 

maze_sprite_1 = Sprite (resized_maze_image);
maze_sprite_2 = Sprite (resized_maze_image);
maze_sprite_3 = Sprite (resized_maze_image);
maze_sprite_4 = Sprite (resized_maze_image);

maze_sprite_1.SetX (Window.GetWidth);
maze_sprite_1.SetY ((Window.GetHeight() / 2) -12);
maze_sprite_1.SetZ (10000);

maze_sprite_2.SetX (Window.GetWidth);
maze_sprite_2.SetY ((Window.GetHeight() / 2) -9);
maze_sprite_2.SetZ (10000);

maze_sprite_3.SetX (Window.GetWidth);
maze_sprite_3.SetY ((Window.GetHeight() / 2) +9);
maze_sprite_3.SetZ (10000);

maze_sprite_4.SetX (Window.GetWidth);
maze_sprite_4.SetY ((Window.GetHeight() / 2) +12);
maze_sprite_4.SetZ (10000);

#----------------------------------------- Pacmanimation --------------------------------

for (i = 0; i < 4; i++) # Loop through 4 pacman sprites
  pacman_images[i] = Image("pacman" + i + ".png"); # sprites named pacman0.png-pacman3.png
pacman_sprite = Sprite();

progress = 0;

fun pacman_move () {

# variables to calculate the progress of pacman moving across the screen at original gameplay rate of ~80 pixels per second
local.screen_width = Window.GetWidth();
local.pacman_speed = 80; # pixels per second
local.refresh_rate = 50; # refreshes per second
local.rate_ratio = (local.pacman_speed / local.refresh_rate );
local.screen_seconds = (local.screen_width / local.pacman_speed); # seconds it takes to go across the screen width
local.refresh_ratio = (local.refresh_rate * local.screen_seconds); 

if (progress < (local.screen_width / local.rate_ratio)){
pacman_sprite.SetX (Window.GetWidth () / 2 - pacman_sprite.GetImage().GetWidth () / 2 );
pacman_sprite.SetY (Window.GetHeight() / 2 - pacman_sprite.GetImage().GetHeight() / 2 );
pacman_sprite.SetZ (5000);
progress++;
pacman_sprite.SetX(progress * local.rate_ratio);
pacman_sprite.SetImage(pacman_images[Math.Int(progress / 4) % 4]);
}
else{
progress = 0;
Plymouth.SetRefreshFunction (pacman_move);
}
}

Plymouth.SetRefreshFunction (pacman_move);

#----------------------------------------- Dialogue --------------------------------

#status = "normal";
#
#fun dialog_setup()
#  {
#    local.box;
#    local.lock;
#    local.entry;
#    
#    box.image = Image("box.png");
#    lock.image = Image("lock.png");
#    entry.image = Image("entry.png");
#    
#    box.sprite = Sprite(box.image);
#    box.x = Window.GetWidth()  / 2 - box.image.GetWidth ()/2;
#    box.y = Window.GetHeight() / 2 - box.image.GetHeight()/2;
#    box.z = 10000;
#    box.sprite.SetPosition(box.x, box.y, box.z);
#    
#    lock.sprite = Sprite(lock.image);
#    lock.x = box.x + box.image.GetWidth()/2 - (lock.image.GetWidth() + entry.image.GetWidth()) / 2;
#    lock.y = box.y + box.image.GetHeight()/2 - lock.image.GetHeight()/2;
#    lock.z = box.z + 1;
#    lock.sprite.SetPosition(lock.x, lock.y, lock.z);
#    
#    entry.sprite = Sprite(entry.image);
#    entry.x = lock.x + lock.image.GetWidth();
#    entry.y = box.y + box.image.GetHeight()/2 - entry.image.GetHeight()/2;
#    entry.z = box.z + 1;
#    entry.sprite.SetPosition(entry.x, entry.y, entry.z);
#    
#    global.dialog.box = box;
#    global.dialog.lock = lock;
#    global.dialog.entry = entry;
#    global.dialog.bullet_image = Image("bullet.png");
#    dialog_opacity (1);
#  }
#    
#fun dialog_opacity(opacity)
#  {
#    dialog.box.sprite.SetOpacity (opacity);
#    dialog.lock.sprite.SetOpacity (opacity);
#    dialog.entry.sprite.SetOpacity (opacity);
#    for (index = 0; dialog.bullet[index]; index++)
#      {
#        dialog.bullet[index].sprite.SetOpacity(opacity);
#      }
#  }
#
#fun display_normal_callback ()
#  {
#    global.status = "normal";
#    if (global.dialog)
#      dialog_opacity (0);
#  }
#
#fun display_password_callback (prompt, bullets)
#  {
#    global.status = "password";
#    if (!global.dialog)
#	dialog_setup();
#    else
#	dialog_opacity(1);
#    for (index = 0; dialog.bullet[index] || index < bullets; index++)
#      {
#        if (!dialog.bullet[index])
#          {
#            dialog.bullet[index].sprite = Sprite(dialog.bullet_image);
#            dialog.bullet[index].x = dialog.entry.x + index * dialog.bullet_image.GetWidth();
#            dialog.bullet[index].y = dialog.entry.y + dialog.entry.image.GetHeight() / 2 - dialog.bullet_image.GetHeight() / 2;
#            dialog.bullet[index].z = dialog.entry.z + 1;
#            dialog.bullet[index].sprite.SetPosition(dialog.bullet[index].x, dialog.bullet[index].y, dialog.bullet[index].z);
#          }
#        if (index < bullets)
#          dialog.bullet[index].sprite.SetOpacity(1);
#        else
#          dialog.bullet[index].sprite.SetOpacity(0);
#      }
#  }
#
#Plymouth.SetDisplayNormalFunction(display_normal_callback);
#Plymouth.SetDisplayPasswordFunction(display_password_callback);

#----------------------------------------- Progress Bar --------------------------------

#progress_box.image = Image("progress_box.png");
#progress_box.sprite = Sprite(progress_box.image);
#
#progress_box.x = Window.GetWidth()  / 2 -    progress_box.image.GetWidth()  / 2;
#progress_box.y = Window.GetHeight() * 0.75 - progress_box.image.GetHeight() / 2;
#progress_box.sprite.SetPosition(progress_box.x, progress_box.y, 0);
#
#progress_bar.original_image = Image("progress_bar.png");
#progress_bar.sprite = Sprite();
#
#progress_bar.x = Window.GetWidth()  / 2 -        progress_bar.original_image.GetWidth() / 2;
#progress_bar.y = Window.GetHeight() / 2 * 1.5  - progress_box.image.GetHeight() / 2 + (progress_box.image.GetHeight() - progress_bar.original_image.GetHeight()) / 2;
#progress_bar.sprite.SetPosition(progress_bar.x, progress_bar.y, 1);
#
#fun progress_callback (duration, progress)
#  {
#    if (progress_bar.image.GetWidth () != Math.Int (progress_bar.original_image.GetWidth () * progress))
#      {
#        progress_bar.image = progress_bar.original_image.Scale(progress_bar.original_image.GetWidth(progress_bar.original_image) * progress, progress_bar.original_image.GetHeight());
#        progress_bar.sprite.SetImage (progress_bar.image);
#      }
#  }
#
#Plymouth.SetBootProgressFunction(progress_callback);

#----------------------------------------- Quit --------------------------------

fun quit_callback ()
{
}

Plymouth.SetQuitFunction(quit_callback);

#----------------------------------------- Message --------------------------------

message_sprite = Sprite();
message_sprite.SetPosition(10, 10, 10000);

fun message_callback (text)
{
  my_image = Image.Text(text, 1, 1, 1);
  message_sprite.SetImage(my_image);
}

Plymouth.SetMessageFunction(message_callback);
